{"version":3,"file":"select-input-min.js","sources":["../src/dom-component.js","../src/defaults.js","../src/select-input.js"],"sourcesContent":["const d = document;\r\n\r\nexport default class DomComponent {\r\n    constructor(element, options = {}, defaults = {}) {\r\n        this.options = Object.assign({}, defaults, options);\r\n\r\n        this._events = [];\r\n\r\n        this.dom = {\r\n            el: this._setElement(element)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Bind a (delegated) event\r\n     * @param {String} event\r\n     * @param {Function} fn\r\n     * @param {HTMLElement|Document} el\r\n     * @return DomComponent\r\n     */\r\n    on(event, fn, el = null) {\r\n\r\n        (el || this.dom.el).addEventListener(event, fn = fn.bind(this), true);\r\n\r\n        this._events.push({\r\n            name: event,\r\n            fn: fn,\r\n            el: el\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return the main wrapping element\r\n     * @return {Element}\r\n     */\r\n    getElement() {\r\n        return this.dom.el;\r\n    }\r\n\r\n    /**\r\n     * Unbind all events and nullify references\r\n     * @return void\r\n     */\r\n    remove() {\r\n        this._events = this._events.filter(event => {\r\n            return (event.el || this.dom.el).removeEventListener(event.name, event.fn, true);\r\n        });\r\n        this.dom.el.parentNode.removeChild(this.dom.el);\r\n        this.dom = this.options = null;\r\n    }\r\n\r\n    /**\r\n     * Query the element in the DOM if its a string\r\n     * @param {Element|String} el\r\n     * @return {Element|null}\r\n     * @protected\r\n     */\r\n    _setElement(el) {\r\n        if (!el && !el.nodeType && typeof el !== 'string') {\r\n            throw new Error('Wrong element type provided!');\r\n        }\r\n        if (el.nodeType) return el;\r\n        return (this.options.parent || d).querySelector(el);\r\n    }\r\n\r\n    /**\r\n     * Communicate changes\r\n     * @param {String} name\r\n     * @param {Object|null} detail\r\n     * @protected\r\n     */\r\n    _trigger(name, detail = null) {\r\n        let event;\r\n\r\n        if (typeof CustomEvent === 'function') {\r\n            event = new CustomEvent(name, {\r\n                detail: detail\r\n            });\r\n        } else {\r\n            event = d.createEvent('Event');\r\n            event.initEvent(name, true, true);\r\n        }\r\n\r\n        this.dom.el.dispatchEvent(event);\r\n    }\r\n}\r\n","export default {\r\n    parent: null,\r\n    items: [],\r\n    current: null,\r\n    allowAdd: true,\r\n    proposal: 'Add {X} to the list?',\r\n    notFound: '{X} not present in the list',\r\n    allowRemove: true,\r\n    removalIcon: '&times;',\r\n    placeHolder: 'Type to search',\r\n    sort: true,\r\n    order: 'desc',\r\n    maxHeight: 0,\r\n    onDelete: null,\r\n    onCreate: null\r\n}\r\n","import DomHelper from \"./dom-component.js\";\nimport defaults from \"./defaults.js\";\n\nconst d = document;\n\nexport default class SelectInput extends DomHelper {\n    constructor(element, options = {}) {\n        super(element, options, defaults);\n\n        this.options.items = this._convertItems(options.items);\n        this.current = options.current ? this._convertItem(options.current) : {};\n\n        // search result caching\n        this.__found = null;\n\n        if (this.options.sort) this._sortItems();\n\n        this._renderInit();\n\n        this._bindEvents();\n    }\n\n    /**\n     * Bind all (delegated) DOM events\n     * @private\n     */\n    _bindEvents() {\n        let closeOnEvent = e => {\n            if ((e.key === 'Escape' || e.keyCode === 27) || !this.dom.el.contains(e.target)) {\n                this.toggle(false)\n            }\n        };\n\n        this.on('input', this._search);\n        this.on('click', this._handleClick);\n        this.on('keyup', this._handleKey);\n        this.on('focusin', () => (this._renderListItems().toggle(true)), this.dom.input);\n\n        // Close the list on `Escape` or on a click outside the main element\n        this.on('keyup', closeOnEvent, d);\n        this.on('click', closeOnEvent, d);\n    }\n\n    /**\n     * Store the deletion callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onDelete(fn) {\n        this.options.onDelete = fn;\n        return this;\n    }\n\n    /**\n     * Store the creation callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onCreate(fn) {\n        this.options.onCreate = fn;\n        return this;\n    }\n\n    /**\n     * Show/hide the dropdown\n     * @param {Boolean} show\n     * @return DomHelper\n     */\n    toggle(show = false) {\n        this.dom.el.firstElementChild.classList[show ? 'remove' : 'add']('si-hide');\n        if (!show) this.dom.input.blur();\n        return this;\n    }\n\n    /**\n     * Get all items in the list\n     * @return {Object[]}\n     */\n    getItems() {\n        return this.options.items;\n    }\n\n    /**\n     * Return the current field value object\n     * @return {{value: String|Number}|null}\n     */\n    getCurrent() {\n        let current = Object.assign({}, this.current);\n        delete current._lc;\n        return current;\n    }\n\n    /**\n     * Clear the current value\n     * @return void\n     * @private\n     */\n    clearCurrent() {\n        this.current = {};\n        this.dom.input.value = '';\n        this._clearSelected();\n    }\n\n    /**\n     * Find an item in the list\n     * @param {EventTarget|HTMLElement|String|Number} value\n     * @return {{}}\n     */\n    findItem(value) {\n        value = value.nodeName ? value.dataset.value : value;\n        return this.options.items.find(item => item.value === value);\n    }\n\n    /**\n     * Set the current value of the field\n     * @param {EventTarget|null} el\n     * @param {Object} item\n     * @return SelectInput\n     * @private\n     */\n    _setCurrent(item, el = null) {\n        this.current = item;\n        this.dom.input.value = item.value.toString();\n        this._setSelected(item, el);\n        return this;\n    }\n\n    /**\n     * Updated selected item in the html list\n     * @param {Object} item\n     * @param {EventTarget|HTMLElement|null} el\n     * @private\n     */\n    _setSelected(item, el = null) {\n        this._clearSelected();\n        el = el ? el : this.dom.list.querySelector(`li[data-value=\"${item.value}\"]`);\n        if (el) el.classList.add('si-current');\n    }\n\n    /**\n     * Remove the classname of current `<li>`\n     * @private\n     */\n    _clearSelected() {\n        let current = this.dom.list.querySelector('.si-current');\n        if (current) current.classList.remove('si-current');\n    }\n\n    /**\n     * Make an array of objects\n     * @param {Array} items\n     * @return {Object[]}\n     * @private\n     */\n    _convertItems(items = []) {\n        return items.map(item => this._convertItem(item))\n    }\n\n    /**\n     * Normalize an item as an usable object\n     * @param {String|Number|{value: String|Number, _lc: String}} item\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _convertItem(item) {\n        item = typeof item !== 'object' ? {value: item} : item;\n        item._lc = item.value.toString().toLowerCase();\n        return item;\n    }\n\n    /**\n     * Create the HTML upon instantiation\n     * @return {Node}\n     * @private\n     */\n    _renderInit() {\n        let wrap = d.createElement('div');\n\n        wrap.className = 'si-wrap si-hide';\n\n        this.dom.input = wrap.appendChild(this._renderInput()).firstChild;\n        this.dom.list = wrap.appendChild(this._renderList()).firstChild;\n\n        if (this.current.value) this.dom.input.value = this.current.value;\n\n        return this.dom.el.appendChild(wrap);\n    }\n\n    /**\n     * Create the input element\n     * @return {HTMLDivElement}\n     * @private\n     */\n    _renderInput() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('input');\n        wrap.className = 'si-input';\n        el.type = 'text';\n        el.autocomplete = 'false';\n        el.spellcheck = false;\n        el.placeholder = this.options.placeHolder;\n        wrap.appendChild(el);\n        return wrap;\n    }\n\n    /**\n     * Create the list element\n     * @return {HTMLDivElement}\n     * @private\n     */\n    _renderList() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('ul'),\n            maxHeight = this.options.maxHeight;\n\n        wrap.className = 'si-list';\n        if (maxHeight) wrap.style.maxHeight = maxHeight + 'px';\n        wrap.appendChild(el);\n\n        return wrap;\n    }\n\n    /**\n     * Create the list items\n     * @param {Object[]} items\n     * @return {String}\n     * @private\n     */\n    _createListItems(items = []) {\n        let list = '',\n            current = this.current.value,\n            selected = '',\n            button = this.options.allowRemove ? this._createRemovalButton() : '';\n\n        items.forEach(item => {\n            selected = current && item.value === current ? ' si-current' : '';\n            list += `<li class=\"si-item${selected}\" data-value=\"${item.value}\">${item.value}${button}</li>`;\n        });\n\n        return list;\n    }\n\n    /**\n     * Insert the set of li's in the DOM\n     * @param html\n     * @return SelectInput\n     * @private\n     */\n    _renderListItems(html = '') {\n        this.dom.list.innerHTML = html || this._createListItems(this.options.items);\n        return this;\n    }\n\n    /**\n     * Item removal button template\n     * @return {String}\n     * @private\n     */\n    _createRemovalButton() {\n        return `<button type=\"button\" class=\"si-removal\">${this.options.removalIcon}</button>`;\n    }\n\n    /**\n     * Search and update the list upon typing\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _search(e) {\n        let found = null,\n            options = this.options,\n            term = e.target.value,\n            termLc = term.toLowerCase(),\n            list = options.items.filter(item => {\n                return item._lc.indexOf(termLc) !== -1;\n            }),\n            html = list || options.allowAdd ? this._createListItems(list) : '',\n            first = list[0],\n            len = list.length;\n\n        if (len === 1) {\n            found = first;\n        }\n\n        if ((len === 0 || (term && termLc !== first._lc)) && options.allowAdd) {\n            this.__found = found;\n            html += this._proposeItem(term);\n        }\n        else if (len === 0 && !options.allowAdd) {\n            html += this._notFoundItem(term);\n        }\n\n        this._renderListItems(html);\n    }\n\n    /**\n     * Create the item creation list item\n     * @param {String} term\n     * @return {String}\n     * @private\n     */\n    _proposeItem(term) {\n        let proposal = this.options.proposal.replace('{X}', `<span>${term}</span>`);\n        return `<li class=\"si-item si-append si-proposal\" data-term=\"${term}\">${proposal}</li>`\n    }\n\n    /**\n     * Create a 'not found' message as a list item\n     * @param {String} term\n     * @return {String}\n     * @private\n     */\n    _notFoundItem(term) {\n        let txt = this.options.notFound.replace('{X}', `<span>${term}</span>`);\n        return `<li class=\"si-item si-append si-not-found\">${txt}</li>`\n    }\n\n    /**\n     * Decide what to do when user clicks inside the component\n     * @param {MouseEvent} e\n     * @private\n     */\n    _handleClick(e) {\n        let el = e.target,\n            classList = el.classList;\n\n        if (this.options.allowAdd && classList.contains('si-proposal')) {\n            if (this._tryCreateItem(el.dataset.term)) {\n                this.toggle()._trigger('created', this.current);\n            }\n            return;\n        }\n\n        if (classList.contains('si-item')) {\n            this._setCurrent(this.findItem(el), el)\n                .toggle()\n                ._trigger('selected', this.current);\n            return;\n        }\n\n        if (this.options.allowRemove && classList.contains('si-removal')) {\n            el = el.parentNode;\n            if (this._fireCallback('onDelete', this.findItem(el))) {\n                this._trigger('removed', this._sliceItem(el));\n            }\n        }\n    }\n\n    /**\n     * The `onCreate` and `onDelete` callbacks allow to prevent their respective actions\n     * @param {String} name\n     * @param {Object} item\n     * @return {Boolean}\n     * @private\n     */\n    _fireCallback(name, item) {\n        if (typeof this.options[name] === 'function') {\n            return this.options[name](item);\n        }\n        return true;\n    }\n\n    /**\n     * Handle `Enter` when there is a value in the field\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _handleKey(e) {\n        let value = e.target.value,\n            item = this.__found,\n            event;\n        \n        if (!!value && (e.keyCode !== 13 && e.key !== 'Enter')) {\n            return;\n        }\n\n        if (!item && value && this.options.allowAdd) {\n            event = this._tryCreateItem(value) ? 'created' : null;\n        } else if (item) {\n            event = 'selected';\n            this._setCurrent(item);\n        }\n\n        if (event) this.toggle()._trigger(event, this.current);\n    }\n\n    /**\n     * If the value doesn't exist and the callback returns true, create and set as current\n     * @param value\n     * @return {boolean}\n     * @private\n     */\n    _tryCreateItem(value) {\n        let item = this._convertItem(value.trim());\n        if (!this.findItem(value) && this._fireCallback('onCreate', item)) {\n            this._setCurrent(this._insertItem(item));\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Insert a new item in the list\n     * @param {{value: String|Number, _lc: String}} item\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _insertItem(item) {\n        this.options.items.push(item);\n        if (this.options.sort) this._sortItems();\n        return item;\n    }\n\n    /**\n     * Rearrange the list\n     * @private\n     */\n    _sortItems() {\n        let order = this.options.order === 'desc' ? 1 : -1;\n        this.options.items.sort((a, b) => {\n            if (a._lc < b._lc) return -order;\n            if (a._lc > b._lc) return order;\n            return 0;\n        });\n    }\n\n    /**\n     * Remove an item from the list\n     * @param {HTMLElement|Node} el\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _sliceItem(el) {\n        let items = this.options.items,\n            needle = el.dataset.value.toLowerCase(),\n            current = this.current,\n            item;\n        this.dom.list.removeChild(el);\n        item = items.splice(items.findIndex(item => item._lc === needle), 1).shift();\n        if (current && item._lc === current._lc) this.clearCurrent();\n        return item;\n    }\n}\n"],"names":["d","document","DomComponent","[object Object]","element","options","defaults","this","Object","assign","_events","dom","el","_setElement","event","fn","addEventListener","bind","push","name","filter","removeEventListener","parentNode","removeChild","nodeType","Error","parent","querySelector","detail","CustomEvent","createEvent","initEvent","dispatchEvent","items","current","allowAdd","proposal","notFound","allowRemove","removalIcon","placeHolder","sort","order","maxHeight","onDelete","onCreate","DomHelper","super","_convertItems","_convertItem","__found","_sortItems","_renderInit","_bindEvents","closeOnEvent","e","key","keyCode","contains","target","toggle","on","_search","_handleClick","_handleKey","_renderListItems","input","show","firstElementChild","classList","blur","_lc","value","_clearSelected","nodeName","dataset","find","item","toString","_setSelected","list","add","remove","map","toLowerCase","wrap","createElement","className","appendChild","_renderInput","firstChild","_renderList","type","autocomplete","spellcheck","placeholder","style","selected","button","_createRemovalButton","forEach","html","innerHTML","_createListItems","found","term","termLc","indexOf","first","len","length","_proposeItem","_notFoundItem","replace","_tryCreateItem","_trigger","_setCurrent","findItem","_fireCallback","_sliceItem","trim","_insertItem","a","b","needle","splice","findIndex","shift","clearCurrent"],"mappings":"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"}