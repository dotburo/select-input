{"version":3,"file":"select-input-min.js","sources":["../src/select-input.js"],"sourcesContent":["const\r\n    d = document,\r\n    defaults = {\r\n        items: [],\r\n        current: null,\r\n        parent: null,\r\n        maxHeight: 0,\r\n        proposal: 'Add {X} to the list?',\r\n        sort: true,\r\n        order: 'desc',\r\n        removalIcon: '&times;'\r\n    };\r\n\r\nexport default class {\r\n    constructor(element, options = {}) {\r\n        this.options = Object.assign({}, defaults, options);\r\n\r\n        this.dom = {\r\n            el: this._setElement(element)\r\n        };\r\n\r\n        this.options.items = this._convertItems(options.items);\r\n        this.current = options.current ? this._convertItem(options.current) : {};\r\n\r\n        // search result caching\r\n        this.__found = null;\r\n\r\n        if (this.options.sort) this._sortItems();\r\n\r\n        this._renderInit();\r\n\r\n        this._events = [];\r\n        this._bindEvents();\r\n    }\r\n\r\n    /**\r\n     * Bind the (delegated) dom events\r\n     * @private\r\n     */\r\n    _bindEvents() {\r\n        let closeOnEvent = e => {\r\n            if ((e.key === 'Escape' || e.keyCode === 27) ||e.target.contains(this.dom.el)) {\r\n                this.toggle(false)\r\n            }\r\n        };\r\n\r\n        this.on('input', this._search);\r\n        this.on('click', this._handleClick);\r\n        this.on('keyup', this._handleKey);\r\n        this.on('focusin', () => (this._renderListItems().toggle(true)), this.dom.input);\r\n\r\n        // close the list on `Escape` or on a click outside the component\r\n        this.on('keyup', closeOnEvent, d);\r\n        this.on('click', closeOnEvent, d);\r\n    }\r\n\r\n    /**\r\n     * Bind a delegated event\r\n     * @param {String} event\r\n     * @param {Function} fn\r\n     * @param {HTMLElement|Document} el\r\n     */\r\n    on(event, fn, el = null) {\r\n        fn = fn.bind(this);\r\n        (el || this.dom.el).addEventListener(event, fn, false);\r\n        this._events.push({\r\n            name: event,\r\n            fn: fn,\r\n            el: el\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Show/hide the dropdown\r\n     * @param {Boolean} show\r\n     */\r\n    toggle(show = false) {\r\n        this.dom.el.firstElementChild.classList[show ? 'remove' : 'add']('si-hide');\r\n        if (!show) this.dom.input.blur();\r\n    }\r\n\r\n    /**\r\n     * Return the main wrapping element\r\n     * @return {Element}\r\n     */\r\n    getElement() {\r\n        return this.dom.el;\r\n    }\r\n\r\n    /**\r\n     * Get all items in the list\r\n     * @return {Object[]}\r\n     */\r\n    getItems() {\r\n        return this.options.items;\r\n    }\r\n\r\n    /**\r\n     * Return the current field value object\r\n     * @return {{}|null}\r\n     */\r\n    getCurrent() {\r\n        let current = Object.assign({}, this.current);\r\n        delete current._lc;\r\n        return current;\r\n    }\r\n\r\n    /**\r\n     * Find an item in the list\r\n     * @param {HTMLElement|String|Number} value\r\n     * @return {{}}\r\n     */\r\n    findItem(value) {\r\n        value = value.nodeName ? value.dataset.value : value;\r\n        return this.options.items.find(item => item.value === value);\r\n    }\r\n\r\n    /**\r\n     * Unbind all events and clear cached properties\r\n     * @return void\r\n     */\r\n    remove() {\r\n        this._events = this._events.filter(event => (event.el || this.dom.el).removeEventListener(event.name, event.fn, false));\r\n        this.dom.el.parentNode.removeChild(this.dom.el);\r\n        this.dom = null;\r\n    }\r\n\r\n    /**\r\n     * Set the current value of the field\r\n     * @param {HTMLElement|null} el\r\n     * @param {Object} item\r\n     * @return this\r\n     * @private\r\n     */\r\n    _setCurrent(item, el = null) {\r\n        this.current = item;\r\n        this.dom.input.value = item.value.toString();\r\n        this._setSelected(item, el);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the current value of the field\r\n     * @private\r\n     */\r\n    _clearCurrent() {\r\n        this.current = {};\r\n        this.dom.input.value = '';\r\n        this._clearSelected();\r\n    }\r\n\r\n    /**\r\n     * Communicate changes\r\n     * @param {String} name\r\n     * @param {Object} item\r\n     * @private\r\n     */\r\n    _trigger(name, item = null) {\r\n        let event;\r\n\r\n        if (typeof CustomEvent === 'function') {\r\n            event = new CustomEvent(name, {\r\n                detail: (item || this.current)\r\n            });\r\n        } else {\r\n            event = d.createEvent('Event');\r\n            event.initEvent(name, true, true);\r\n        }\r\n\r\n        this.dom.el.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Query the element in the dom if its a string\r\n     * @param {Element|String} el\r\n     * @return {Element|null}\r\n     * @private\r\n     */\r\n    _setElement(el) {\r\n        if (!el && !el.nodeType && typeof el !== 'string') {\r\n            throw new Error('Wrong element type provided!');\r\n        }\r\n        if (el.nodeType) return el;\r\n        return (this.options.parent || d).querySelector(el);\r\n    }\r\n\r\n    /**\r\n     * Updated selected item in the html list\r\n     * @param {Object} item\r\n     * @param {HTMLElement|null} el\r\n     * @private\r\n     */\r\n    _setSelected(item, el = null) {\r\n        this._clearSelected();\r\n        el = el ? el : this.dom.list.querySelector(`li[data-value=\"${item.value}\"]`);\r\n        if (el) el.classList.add('si-current');\r\n    }\r\n\r\n    /**\r\n     * Remove classname\r\n     * @private\r\n     */\r\n    _clearSelected() {\r\n        let current = this.dom.list.querySelector('.si-current');\r\n        if (current) current.classList.remove('si-current');\r\n    }\r\n\r\n    /**\r\n     * Make an array of object if needed\r\n     * @param {Array} items\r\n     * @return {Object[]}\r\n     * @private\r\n     */\r\n    _convertItems(items = []) {\r\n        return items.map(item => this._convertItem(item))\r\n    }\r\n\r\n    /**\r\n     * Normalize an item to object\r\n     * @param {{value: String|Number, _lc: string|String} item\r\n     * @return {{value: String|Number, _lc: string}}\r\n     * @private\r\n     */\r\n    _convertItem(item) {\r\n        item = typeof item !== 'object' ? {value: item} : item;\r\n        item._lc = item.value.toString().toLowerCase();\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * Create the HTML upon instantiation\r\n     * @return {Node}\r\n     * @private\r\n     */\r\n    _renderInit() {\r\n        let wrap = d.createElement('div');\r\n\r\n        wrap.className = 'si-wrap si-hide';\r\n\r\n        this.dom.input = wrap.appendChild(this._renderInput());\r\n        this.dom.list = wrap.appendChild(this._renderList()).firstChild;\r\n\r\n        if (this.current.value) this.dom.input.value = this.current.value;\r\n\r\n        return this.dom.el.appendChild(wrap);\r\n    }\r\n\r\n    /**\r\n     * Create the input element\r\n     * @return {HTMLInputElement}\r\n     * @private\r\n     */\r\n    _renderInput() {\r\n        let el = d.createElement('input');\r\n        el.type = 'text';\r\n        el.autocomplete = 'false';\r\n        el.spellcheck = false;\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * Create the list element\r\n     * @return {HTMLDivElement}\r\n     * @private\r\n     */\r\n    _renderList() {\r\n        let wrap = d.createElement('div'),\r\n            el = d.createElement('ul'),\r\n            maxHeight = this.options.maxHeight;\r\n\r\n        wrap.className = 'si-list';\r\n        if (maxHeight) wrap.style.maxHeight = maxHeight + 'px';\r\n        wrap.appendChild(el);\r\n\r\n        return wrap;\r\n    }\r\n\r\n    /**\r\n     * Create the list items\r\n     * @param {Object[]} items\r\n     * @return {String}\r\n     * @private\r\n     */\r\n    _createListItems(items = []) {\r\n        let list = '',\r\n            current = this.current.value,\r\n            selected = '',\r\n            button = this._createRemovalButton();\r\n\r\n        items.forEach(item => {\r\n            selected = current && item.value === current ? ' si-current' : '';\r\n            list += `<li class=\"si-item${selected}\" data-value=\"${item.value}\">${item.value}${button}</li>`;\r\n        });\r\n\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Insert the set of li's in the DOM\r\n     * @param html\r\n     * @return this\r\n     * @private\r\n     */\r\n    _renderListItems(html = '') {\r\n        this.dom.list.innerHTML = html || this._createListItems(this.options.items);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Item removal button template\r\n     * @return {String}\r\n     * @private\r\n     */\r\n    _createRemovalButton() {\r\n        return `<button type=\"button\" class=\"si-removal\">${this.options.removalIcon}</button>`;\r\n    }\r\n\r\n    /**\r\n     * Search and update the list upon typing\r\n     * @param {KeyboardEvent} e\r\n     * @private\r\n     */\r\n    _search(e) {\r\n        let found = null,\r\n            term = e.target.value,\r\n            termLc = term.toLowerCase(),\r\n            list = this.options.items.filter(item => {\r\n                return item._lc.indexOf(termLc) !== -1;\r\n            }),\r\n            html = this._createListItems(list),\r\n            first = list[0],\r\n            len = list.length;\r\n\r\n        if (len === 1 && first) {\r\n            found = first;\r\n        }\r\n\r\n        if (!first || (len && termLc && termLc !== first._lc)) {\r\n            html += this._proposeItem(term);\r\n        }\r\n\r\n        this.__found = found;\r\n        this._renderListItems(html);\r\n    }\r\n\r\n    /**\r\n     * Create the item creation list item\r\n     * @param {String} term\r\n     * @return {String}\r\n     * @private\r\n     */\r\n    _proposeItem(term) {\r\n        let proposal = this.options.proposal.replace('{X}', `<span>${term}</span>`);\r\n        return `<li class=\"si-item si-proposal\" data-term=\"${term}\">${proposal}</li>`\r\n    }\r\n\r\n    /**\r\n     * Decide what to do when user clicks inside the component\r\n     * @param {MouseEvent} e\r\n     * @private\r\n     */\r\n    _handleClick(e) {\r\n        let el = e.target;\r\n\r\n        if (el.classList.contains('si-proposal')) {\r\n            this._setCurrent(this._createItem(el), el).toggle();\r\n            this._trigger('created');\r\n            return;\r\n        }\r\n\r\n        if (el.classList.contains('si-item')) {\r\n            this._setCurrent(this.findItem(el), el).toggle();\r\n            this._trigger('selected');\r\n            return;\r\n        }\r\n\r\n        if (el.classList.contains('si-removal')) {\r\n            this._trigger('removed', this._sliceItem(el.parentNode));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle `Enter`\r\n     * @param {KeyboardEvent} e\r\n     * @private\r\n     */\r\n    _handleKey(e) {\r\n        let value = e.target.value,\r\n            event = 'selected';\r\n\r\n        if (value && (e.keyCode === 13 || e.which === 13 || e.key === 'Enter')) {\r\n            if (this.__found) {\r\n                this._setCurrent(this.__found);\r\n            } else {\r\n                this._setCurrent(this._createItem(value));\r\n                event = 'created';\r\n            }\r\n            this.toggle();\r\n            this._trigger(event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Insert a new item in the list\r\n     * @param {String|HTMLElement|Number} el\r\n     * @return {{value: String|Number, _lc: string}}\r\n     * @private\r\n     */\r\n    _createItem(el) {\r\n        let item = this._convertItem(el.nodeName ? el.dataset.term : el);\r\n        this.options.items.push(item);\r\n        if (this.options.sort) this._sortItems();\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * Rearrange the list\r\n     * @private\r\n     */\r\n    _sortItems() {\r\n        let order = this.options.order === 'desc' ? 1 : -1;\r\n        this.options.items.sort((a, b) => {\r\n            if (a.value < b.value) return -order;\r\n            if (a.value > b.value) return order;\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Remove an item from the list\r\n     * @param {HTMLElement|Node} el\r\n     * @return {{value: String|Number, _lc: string}}\r\n     * @private\r\n     */\r\n    _sliceItem(el) {\r\n        let items = this.options.items,\r\n            needle = el.dataset.value.toLowerCase(),\r\n            current = this.current,\r\n            item;\r\n        this.dom.list.removeChild(el);\r\n        item = items.splice(items.findIndex(item => item._lc === needle), 1).shift();\r\n        if (current && item._lc === current._lc) this._clearCurrent();\r\n        return item;\r\n    }\r\n}\r\n"],"names":["d","document","defaults","items","current","parent","maxHeight","proposal","sort","order","removalIcon","[object Object]","element","options","this","Object","assign","dom","el","_setElement","_convertItems","_convertItem","__found","_sortItems","_renderInit","_events","_bindEvents","closeOnEvent","e","key","keyCode","target","contains","toggle","on","_search","_handleClick","_handleKey","_renderListItems","input","event","fn","bind","addEventListener","push","name","show","firstElementChild","classList","blur","_lc","value","nodeName","dataset","find","item","filter","removeEventListener","parentNode","removeChild","toString","_setSelected","_clearSelected","CustomEvent","detail","createEvent","initEvent","dispatchEvent","nodeType","Error","querySelector","list","add","remove","map","toLowerCase","wrap","createElement","className","appendChild","_renderInput","_renderList","firstChild","type","autocomplete","spellcheck","style","selected","button","_createRemovalButton","forEach","html","innerHTML","_createListItems","found","term","termLc","indexOf","first","len","length","_proposeItem","replace","_setCurrent","_createItem","_trigger","findItem","_sliceItem","which","a","b","needle","splice","findIndex","shift","_clearCurrent"],"mappings":"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"}