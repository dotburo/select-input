{"version":3,"file":"select-input-min.js","sources":["../src/dom-component.js","../src/defaults.js","../src/select-input.js"],"sourcesContent":["const d = document;\r\n\r\nexport default class DomComponent {\r\n    constructor(element, options = {}, defaults = {}) {\r\n        this.options = Object.assign({}, defaults, options);\r\n\r\n        this._events = [];\r\n\r\n        this.dom = {\r\n            el: this._setElement(element)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Bind a (delegated) event\r\n     * @param {String} event\r\n     * @param {Function} fn\r\n     * @param {HTMLElement|Document} el\r\n     * @return DomComponent\r\n     */\r\n    on(event, fn, el = null) {\r\n\r\n        (el || this.dom.el).addEventListener(event, fn = fn.bind(this), true);\r\n\r\n        this._events.push({\r\n            name: event,\r\n            fn: fn,\r\n            el: el\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Return the main wrapping element\r\n     * @return {Element}\r\n     */\r\n    getElement() {\r\n        return this.dom.el;\r\n    }\r\n\r\n    /**\r\n     * Unbind all events and nullify references\r\n     * @return void\r\n     */\r\n    remove() {\r\n        this._events = this._events.filter(event => {\r\n            return (event.el || this.dom.el).removeEventListener(event.name, event.fn, true);\r\n        });\r\n        this.dom.el.parentNode.removeChild(this.dom.el);\r\n        this.dom = this.options = null;\r\n    }\r\n\r\n    /**\r\n     * Query the element in the DOM if its a string\r\n     * @param {Element|String} el\r\n     * @return {Element|null}\r\n     * @protected\r\n     */\r\n    _setElement(el) {\r\n        if (!el && !el.nodeType && typeof el !== 'string') {\r\n            throw new Error('Wrong element type provided!');\r\n        }\r\n        if (el.nodeType) return el;\r\n        return (this.options.parent || d).querySelector(el);\r\n    }\r\n\r\n    /**\r\n     * Communicate changes\r\n     * @param {String} name\r\n     * @param {Object|null} detail\r\n     * @protected\r\n     */\r\n    _trigger(name, detail = null) {\r\n        let event;\r\n\r\n        if (typeof CustomEvent === 'function') {\r\n            event = new CustomEvent(name, {\r\n                detail: detail,\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n        } else {\r\n            event = d.createEvent('Event');\r\n            event.initEvent(name, true, true);\r\n        }\r\n\r\n        this.dom.el.dispatchEvent(event);\r\n    }\r\n}\r\n","export default {\r\n    parent: null,\r\n    items: [],\r\n    current: null,\r\n    allowAdd: true,\r\n    proposal: 'Add {X} to the list?',\r\n    notFound: '{X} not present in the list',\r\n    allowRemove: true,\r\n    removalIcon: '&times;',\r\n    placeHolder: 'Type to search',\r\n    sort: true,\r\n    order: 'desc',\r\n    maxHeight: 0,\r\n    onDelete: null,\r\n    onCreate: null,\r\n    valueKey: 'value',\r\n    textKey: 'value'\r\n}\r\n","import DomHelper from \"./dom-component.js\";\nimport defaults from \"./defaults.js\";\n\nconst d = document;\n\nexport default class SelectInput extends DomHelper {\n    constructor(element, options = {}) {\n        super(element, options, defaults);\n        let current = options.current ? this._convertItem(options.current) : null;\n\n        this.options.items = this._convertItems(options.items);\n        this.current = current ? this.findItem(this._getItemProp(current)) : null;\n\n        // Cached search result\n        this.__found = null;\n\n        if (this.options.sort) this._sortItems();\n\n        this._renderInit();\n\n        this._bindEvents();\n\n        if (current) {\n            this._setInputValue(current);\n        }\n    }\n\n    /**\n     * Bind all (delegated) DOM events\n     * @private\n     */\n    _bindEvents() {\n        let closeOnEvent = e => {\n            if ((e.key === 'Escape' || e.keyCode === 27) || !this.dom.el.contains(e.target)) {\n                this.toggle(false)\n            }\n        };\n\n        this.on('input', this._search);\n        this.on('click', this._handleClick);\n        this.on('keyup', this._handleKey);\n        this.on('focusin', () => (this._renderListItems().toggle(true)), this.dom.input);\n\n        // Close the list on `Escape` or on a click outside the main element\n        this.on('keyup', closeOnEvent, d);\n        this.on('click', closeOnEvent, d);\n    }\n\n    /**\n     * Store the deletion callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onDelete(fn) {\n        this.options.onDelete = fn;\n        return this;\n    }\n\n    /**\n     * Store the creation callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onCreate(fn) {\n        this.options.onCreate = fn;\n        return this;\n    }\n\n    /**\n     * Show/hide the dropdown\n     * @param {Boolean} show\n     * @return DomHelper\n     */\n    toggle(show = false) {\n        this.dom.el.firstElementChild.classList[show ? 'remove' : 'add']('si-hide');\n        if (!show) this.dom.input.blur();\n        return this;\n    }\n\n    /**\n     * Get all items in the list\n     * @return {Object[]}\n     */\n    getItems() {\n        return this.options.items;\n    }\n\n    /**\n     * Return the current field value object\n     * @return {{value: String|Number}|null}\n     */\n    getCurrent() {\n        let current = Object.assign({}, this.current);\n        delete current._lc_value;\n        delete current._lc_text;\n        return current;\n    }\n\n    /**\n     * Clear the current value\n     * @return void\n     * @private\n     */\n    clearCurrent() {\n        this.current = null;\n        this.dom.input.value = '';\n        this._clearSelected();\n    }\n\n    /**\n     * Find an item in the list\n     * @param {EventTarget|HTMLElement|String|Number} value\n     * @return {{}}\n     */\n    findItem(value) {\n        value = value.nodeName ? value.dataset.value : value;\n        return this.options.items.find(item => this._getItemProp(item) == value);\n    }\n\n    /**\n     * Set the current value by its string\n     * @param {String|undefined} value\n     * @return SelectInput\n     */\n    setCurrent(value) {\n        this._setCurrent(value ? this.findItem(value) : null);\n        return this;\n    }\n\n    /**\n     * Set the current value of the field\n     * @param {EventTarget|null} el\n     * @param {Object|null} item\n     * @return SelectInput\n     * @private\n     */\n    _setCurrent(item, el = null) {\n        this._setInputValue(item);\n        if (item) {\n            this.current = item;\n            this._setSelected(item, el);\n        } else {\n            this.current = null;\n            this._clearSelected();\n        }\n        return this;\n    }\n\n    /**\n     * Set the HTML input field\n     * @param {Object} item\n     * @return void\n     * @private\n     */\n    _setInputValue(item) {\n        this.dom.input.value = item ? this._getItemProp(item, 'text').toString() : '';\n    }\n\n    /**\n     * Updated selected item in the html list\n     * @param {Object} item\n     * @param {EventTarget|HTMLElement|null} el\n     * @private\n     */\n    _setSelected(item, el = null) {\n        this._clearSelected();\n        el = el ? el : this.dom.list.querySelector(`li[data-value=\"${this._getItemProp(item)}\"]`);\n        if (el) el.classList.add('si-current');\n    }\n\n    /**\n     * Remove the classname of current `<li>`\n     * @private\n     */\n    _clearSelected() {\n        let current = this.dom.list.querySelector('.si-current');\n        if (current) current.classList.remove('si-current');\n    }\n\n    /**\n     * Make an array of objects\n     * @param {Array} items\n     * @return {Object[]}\n     * @private\n     */\n    _convertItems(items = []) {\n        return items.map(item => this._convertItem(item))\n    }\n\n    /**\n     * Normalize an item as an usable object\n     * @param {String|Number|{value: String|Number, _lc_value: String, _lc_text: String}} item\n     * @return {{value: String|Number, _lc_value: String, _lc_text: String}}\n     * @private\n     */\n    _convertItem(item) {\n        let opt = this.options;\n        item = typeof item !== 'object' ? {[opt.valueKey]: item, [opt.textKey]: item} : item;\n        item._lc_value = this._makeSearchString(this._getItemProp(item));\n        item._lc_text = this._makeSearchString(this._getItemProp(item, 'text'));\n        return item;\n    }\n\n    /**\n     * Format all searchable strings\n     * @param {String} value\n     * @return {String}\n     * @private\n     */\n    _makeSearchString(value) {\n        return value.toString().toLowerCase().replace(/\\s+/g, '-');\n    }\n\n    /**\n     * Return the value of one of the custom named properties\n     * @param {Object} item\n     * @param {String} prop\n     * @return {String|Number}\n     * @private\n     */\n    _getItemProp(item, prop = 'value') {\n        return item ? item[this.options[`${prop}Key`]] : null;\n    }\n\n    /**\n     * Create the HTML upon instantiation\n     * @return {Node}\n     * @private\n     */\n    _renderInit() {\n        let wrap = d.createElement('div');\n\n        wrap.className = 'si-wrap si-hide';\n\n        this.dom.input = wrap.appendChild(this._renderInput()).firstChild;\n        this.dom.list = wrap.appendChild(this._renderList()).firstChild;\n\n        return this.dom.el.appendChild(wrap);\n    }\n\n    /**\n     * Create the input element\n     * @return {HTMLDivElement}\n     * @private\n     */\n    _renderInput() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('input');\n        wrap.className = 'si-input';\n        el.type = 'text';\n        el.autocomplete = 'false';\n        el.spellcheck = false;\n        el.placeholder = this.options.placeHolder;\n        wrap.appendChild(el);\n        return wrap;\n    }\n\n    /**\n     * Create the list element\n     * @return {HTMLDivElement}\n     * @private\n     */\n    _renderList() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('ul'),\n            maxHeight = this.options.maxHeight;\n\n        wrap.className = 'si-list';\n        if (maxHeight) wrap.style.maxHeight = maxHeight + 'px';\n        wrap.appendChild(el);\n\n        return wrap;\n    }\n\n    /**\n     * Create the list items\n     * @param {Object[]} items\n     * @return {String}\n     * @private\n     */\n    _createListItems(items = []) {\n        let list = '',\n            opt = this.options,\n            currentValue = this._getItemProp(this.current),\n            selected = '',\n            button = opt.allowRemove ? this._createRemovalButton() : '',\n            value = '',\n            text = '';\n\n        items.forEach(item => {\n            value = this._getItemProp(item);\n            text = this._getItemProp(item, 'text');\n            selected = currentValue && value == currentValue ? ' si-current' : '';\n            list += `<li class=\"si-item${selected}\" data-value=\"${value}\">${text + button}</li>`;\n        });\n\n        return list;\n    }\n\n    /**\n     * Insert the set of li's in the DOM\n     * @param html\n     * @return SelectInput\n     * @private\n     */\n    _renderListItems(html = '') {\n        this.dom.list.innerHTML = html || this._createListItems(this.options.items);\n        return this;\n    }\n\n    /**\n     * Item removal button template\n     * @return {String}\n     * @private\n     */\n    _createRemovalButton() {\n        return `<button type=\"button\" class=\"si-removal\">${this.options.removalIcon}</button>`;\n    }\n\n    /**\n     * Search and update the list upon typing\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _search(e) {\n        let options = this.options,\n            term = e.target.value,\n            termLc = this._makeSearchString(term),\n            list = this._searchItem(termLc),\n            html = list || options.allowAdd ? this._createListItems(list) : '',\n            first = list[0],\n            len = list.length;\n\n        if (len === 1) {\n            this.__found = first;\n        }\n\n        if (len !== 1 || !term) {\n            this.__found = null;\n        }\n\n        if (options.allowAdd && term && (!first || termLc !== first._lc_text && termLc !== first._lc_value)) {\n            html += this._proposeItem(term)\n        } else if (!options.allowAdd) {\n            html += this._notFoundItem(term);\n        }\n\n        this._renderListItems(html);\n    }\n\n    /**\n     * Filter the list of available items\n     * @param {String} str\n     * @return {[]}\n     * @private\n     */\n    _searchItem(str) {\n        return this.options.items.filter(item => {\n            return item._lc_value.indexOf(str) !== -1 || item._lc_text.indexOf(str) !== -1;\n        })\n    }\n\n    /**\n     * Create the item creation list item\n     * @param {String} term\n     * @return {String}\n     * @private\n     */\n    _proposeItem(term) {\n        let proposal = this.options.proposal.replace('{X}', `<span>${term}</span>`);\n        return `<li class=\"si-item si-append si-proposal\" data-term=\"${term}\">${proposal}</li>`\n    }\n\n    /**\n     * Create a 'not found' message as a list item\n     * @param {String} term\n     * @return {String}\n     * @private\n     */\n    _notFoundItem(term) {\n        let txt = this.options.notFound.replace('{X}', `<span>${term}</span>`);\n        return `<li class=\"si-item si-append si-not-found\">${txt}</li>`\n    }\n\n    /**\n     * Decide what to do when user clicks inside the component\n     * @param {MouseEvent} e\n     * @private\n     */\n    _handleClick(e) {\n        let el = e.target,\n            classList = el.classList;\n\n        if (this.options.allowAdd && classList.contains('si-proposal')) {\n            if (this._tryCreateItem(el.dataset.term)) {\n                this.toggle()._trigger('created', this.current);\n            }\n            return;\n        }\n\n        if (classList.contains('si-item')) {\n            this._setCurrent(this.findItem(el), el)\n                .toggle()\n                ._trigger('selected', this.current);\n            return;\n        }\n\n        if (this.options.allowRemove && classList.contains('si-removal')) {\n            el = el.parentNode;\n            if (this._fireCallback('onDelete', this.findItem(el))) {\n                this._trigger('removed', this._sliceItem(el));\n            }\n        }\n    }\n\n    /**\n     * The `onCreate` and `onDelete` callbacks allow to prevent their respective actions\n     * @param {String} name\n     * @param {Object} item\n     * @return {Boolean}\n     * @private\n     */\n    _fireCallback(name, item) {\n        if (typeof this.options[name] === 'function') {\n            return this.options[name](item);\n        }\n        return true;\n    }\n\n    /**\n     * Handle `Enter` when there is a value in the field\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _handleKey(e) {\n        let value = e.target.value,\n            item = this.__found,\n            event;\n\n        if (!!value && (e.keyCode !== 13 || e.key !== 'Enter')) {\n            return;\n        }\n\n        if (!item && value && this.options.allowAdd) {\n            event = this._tryCreateItem(value) ? 'created' : null;\n        } else if (item) {\n            event = 'selected';\n            this._setCurrent(item);\n        }\n\n        if (event) this.toggle()._trigger(event, this.current);\n    }\n\n    /**\n     * If the value doesn't exist and the callback returns true, create and set as current\n     * @param value\n     * @return {boolean}\n     * @private\n     */\n    _tryCreateItem(value) {\n        let item = this._convertItem(value.trim());\n        if (!this.findItem(value) && this._fireCallback('onCreate', item)) {\n            this._setCurrent(this._insertItem(item));\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Insert a new item in the list\n     * @param {{value: String|Number, _lc_value: String, _lc_text: String}} item\n     * @return {{value: String|Number, _lc_value: String, _lc_text: String}}\n     * @private\n     */\n    _insertItem(item) {\n        this.options.items.push(item);\n        if (this.options.sort) this._sortItems();\n        return item;\n    }\n\n    /**\n     * Rearrange the list\n     * @private\n     */\n    _sortItems() {\n        let order = this.options.order === 'desc' ? 1 : -1;\n        this.options.items.sort((a, b) => {\n            if (a._lc_text < b._lc_text) return -order;\n            if (a._lc_text > b._lc_text) return order;\n            return 0;\n        });\n    }\n\n    /**\n     * Remove an item from the list\n     * @param {HTMLElement|Node} el\n     * @return {{value: String|Number, _lc_value: String, _lc_text: String}}\n     * @private\n     */\n    _sliceItem(el) {\n        let items = this.options.items,\n            needle = el.dataset.value.toLowerCase(),\n            current = this.current,\n            item;\n        this.dom.list.removeChild(el);\n        item = items.splice(items.findIndex(item => item._lc_value === needle), 1).shift();\n        if (current && item._lc_value === current._lc_value) this.clearCurrent();\n        return item;\n    }\n}\n"],"names":["d","document","DomComponent","[object Object]","element","options","defaults","this","Object","assign","_events","dom","el","_setElement","event","fn","addEventListener","bind","push","name","filter","removeEventListener","parentNode","removeChild","nodeType","Error","parent","querySelector","detail","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","items","current","allowAdd","proposal","notFound","allowRemove","removalIcon","placeHolder","sort","order","maxHeight","onDelete","onCreate","valueKey","textKey","DomHelper","super","_convertItem","_convertItems","findItem","_getItemProp","__found","_sortItems","_renderInit","_bindEvents","_setInputValue","closeOnEvent","e","key","keyCode","contains","target","toggle","on","_search","_handleClick","_handleKey","_renderListItems","input","show","firstElementChild","classList","blur","_lc_value","_lc_text","value","_clearSelected","nodeName","dataset","find","item","_setCurrent","_setSelected","toString","list","add","remove","map","opt","_makeSearchString","toLowerCase","replace","prop","wrap","createElement","className","appendChild","_renderInput","firstChild","_renderList","type","autocomplete","spellcheck","placeholder","style","currentValue","selected","button","_createRemovalButton","text","forEach","html","innerHTML","_createListItems","term","termLc","_searchItem","first","len","length","_proposeItem","_notFoundItem","str","indexOf","_tryCreateItem","_trigger","_fireCallback","_sliceItem","trim","_insertItem","a","b","needle","splice","findIndex","shift","clearCurrent"],"mappings":"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"}