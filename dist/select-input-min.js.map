{"version":3,"file":"select-input-min.js","sources":["../src/select-input.js"],"sourcesContent":["const\n    d = document,\n    defaults = {\n        items: [],\n        current: null,\n        parent: null,\n        maxHeight: 0,\n        proposal: 'Add {X} to the list?',\n        sort: true,\n        order: 'desc',\n        removalIcon: '&times;',\n        placeHolder: 'Type to search',\n        onDelete: null,\n        onCreate: null\n    };\n\nexport default class SelectInput {\n    constructor(element, options = {}) {\n        this.options = Object.assign({}, defaults, options);\n\n        this.dom = {\n            el: this._setElement(element)\n        };\n\n        this.options.items = this._convertItems(options.items);\n        this.current = options.current ? this._convertItem(options.current) : {};\n\n        // search result caching\n        this.__found = null;\n\n        if (this.options.sort) this._sortItems();\n\n        this._renderInit();\n\n        this._events = [];\n        this._bindEvents();\n    }\n\n    /**\n     * Bind all (delegated) DOM events\n     * @private\n     */\n    _bindEvents() {\n        let closeOnEvent = e => {\n            if ((e.key === 'Escape' || e.keyCode === 27) || !this.dom.el.contains(e.target)) {\n                this.toggle(false)\n            }\n        };\n\n        this.on('input', this._search);\n        this.on('click', this._handleClick);\n        this.on('keyup', this._handleKey);\n        this.on('focusin', () => (this._renderListItems().toggle(true)), this.dom.input);\n\n        // Close the list on `Escape` or on a click outside the main element\n        this.on('keyup', closeOnEvent, d);\n        this.on('click', closeOnEvent, d);\n    }\n\n    /**\n     * Bind a (delegated) event\n     * @param {String} event\n     * @param {Function} fn\n     * @param {HTMLElement|Document} el\n     * @return SelectInput\n     */\n    on(event, fn, el = null) {\n\n        (el || this.dom.el).addEventListener(event, fn = fn.bind(this), true);\n\n        this._events.push({\n            name: event,\n            fn: fn,\n            el: el\n        });\n\n        return this;\n    }\n\n    /**\n     * Store the deletion callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onDelete(fn) {\n        this.options.onDelete = fn;\n        return this;\n    }\n\n    /**\n     * Store the creation callback\n     * @param {Function} fn\n     * @return SelectInput\n     */\n    onCreate(fn) {\n        this.options.onCreate = fn;\n        return this;\n    }\n\n    /**\n     * Show/hide the dropdown\n     * @param {Boolean} show\n     * @return SelectInput\n     */\n    toggle(show = false) {\n        this.dom.el.firstElementChild.classList[show ? 'remove' : 'add']('si-hide');\n        if (!show) this.dom.input.blur();\n        return this;\n    }\n\n    /**\n     * Return the main wrapping element\n     * @return {Element}\n     */\n    getElement() {\n        return this.dom.el;\n    }\n\n    /**\n     * Get all items in the list\n     * @return {Object[]}\n     */\n    getItems() {\n        return this.options.items;\n    }\n\n    /**\n     * Return the current field value object\n     * @return {{value: String|Number}|null}\n     */\n    getCurrent() {\n        let current = Object.assign({}, this.current);\n        delete current._lc;\n        return current;\n    }\n\n    /**\n     * Clear the current value\n     * @return void\n     * @private\n     */\n    clearCurrent() {\n        this.current = {};\n        this.dom.input.value = '';\n        this._clearSelected();\n    }\n\n    /**\n     * Find an item in the list\n     * @param {EventTarget|HTMLElement|String|Number} value\n     * @return {{}}\n     */\n    findItem(value) {\n        value = value.nodeName ? value.dataset.value : value;\n        return this.options.items.find(item => item.value === value);\n    }\n\n    /**\n     * Unbind all events and nullify references\n     * @return void\n     */\n    remove() {\n        this._events = this._events.filter(event => {\n            return (event.el || this.dom.el).removeEventListener(event.name, event.fn, true);\n        });\n        this.dom.el.parentNode.removeChild(this.dom.el);\n        this.dom = this.options = null;\n    }\n\n    /**\n     * Set the current value of the field\n     * @param {EventTarget|null} el\n     * @param {Object} item\n     * @return SelectInput\n     * @private\n     */\n    _setCurrent(item, el = null) {\n        this.current = item;\n        this.dom.input.value = item.value.toString();\n        this._setSelected(item, el);\n        return this;\n    }\n\n    /**\n     * Communicate changes\n     * @param {String} name\n     * @param {Object} item\n     * @private\n     */\n    _trigger(name, item = null) {\n        let event;\n\n        if (typeof CustomEvent === 'function') {\n            event = new CustomEvent(name, {\n                detail: (item || this.current)\n            });\n        } else {\n            event = d.createEvent('Event');\n            event.initEvent(name, true, true);\n        }\n\n        this.dom.el.dispatchEvent(event);\n    }\n\n    /**\n     * Query the element in the DOM if its a string\n     * @param {Element|String} el\n     * @return {Element|null}\n     * @private\n     */\n    _setElement(el) {\n        if (!el && !el.nodeType && typeof el !== 'string') {\n            throw new Error('Wrong element type provided!');\n        }\n        if (el.nodeType) return el;\n        return (this.options.parent || d).querySelector(el);\n    }\n\n    /**\n     * Updated selected item in the html list\n     * @param {Object} item\n     * @param {EventTarget|HTMLElement|null} el\n     * @private\n     */\n    _setSelected(item, el = null) {\n        this._clearSelected();\n        el = el ? el : this.dom.list.querySelector(`li[data-value=\"${item.value}\"]`);\n        if (el) el.classList.add('si-current');\n    }\n\n    /**\n     * Remove the classname of current `<li>`\n     * @private\n     */\n    _clearSelected() {\n        let current = this.dom.list.querySelector('.si-current');\n        if (current) current.classList.remove('si-current');\n    }\n\n    /**\n     * Make an array of objects\n     * @param {Array} items\n     * @return {Object[]}\n     * @private\n     */\n    _convertItems(items = []) {\n        return items.map(item => this._convertItem(item))\n    }\n\n    /**\n     * Normalize an item as an usable object\n     * @param {String|Number|{value: String|Number, _lc: String}} item\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _convertItem(item) {\n        item = typeof item !== 'object' ? {value: item} : item;\n        item._lc = item.value.toString().toLowerCase();\n        return item;\n    }\n\n    /**\n     * Create the HTML upon instantiation\n     * @return {Node}\n     * @private\n     */\n    _renderInit() {\n        let wrap = d.createElement('div');\n\n        wrap.className = 'si-wrap si-hide';\n\n        this.dom.input = wrap.appendChild(this._renderInput()).firstChild;\n        this.dom.list = wrap.appendChild(this._renderList()).firstChild;\n\n        if (this.current.value) this.dom.input.value = this.current.value;\n\n        return this.dom.el.appendChild(wrap);\n    }\n\n    /**\n     * Create the input element\n     * @return {HTMLInputElement}\n     * @private\n     */\n    _renderInput() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('input');\n        wrap.className = 'si-input';\n        el.type = 'text';\n        el.autocomplete = 'false';\n        el.spellcheck = false;\n        el.placeholder = this.options.placeHolder;\n        wrap.appendChild(el);\n        return wrap;\n    }\n\n    /**\n     * Create the list element\n     * @return {HTMLDivElement}\n     * @private\n     */\n    _renderList() {\n        let wrap = d.createElement('div'),\n            el = d.createElement('ul'),\n            maxHeight = this.options.maxHeight;\n\n        wrap.className = 'si-list';\n        if (maxHeight) wrap.style.maxHeight = maxHeight + 'px';\n        wrap.appendChild(el);\n\n        return wrap;\n    }\n\n    /**\n     * Create the list items\n     * @param {Object[]} items\n     * @return {String}\n     * @private\n     */\n    _createListItems(items = []) {\n        let list = '',\n            current = this.current.value,\n            selected = '',\n            button = this._createRemovalButton();\n\n        items.forEach(item => {\n            selected = current && item.value === current ? ' si-current' : '';\n            list += `<li class=\"si-item${selected}\" data-value=\"${item.value}\">${item.value}${button}</li>`;\n        });\n\n        return list;\n    }\n\n    /**\n     * Insert the set of li's in the DOM\n     * @param html\n     * @return SelectInput\n     * @private\n     */\n    _renderListItems(html = '') {\n        this.dom.list.innerHTML = html || this._createListItems(this.options.items);\n        return this;\n    }\n\n    /**\n     * Item removal button template\n     * @return {String}\n     * @private\n     */\n    _createRemovalButton() {\n        return `<button type=\"button\" class=\"si-removal\">${this.options.removalIcon}</button>`;\n    }\n\n    /**\n     * Search and update the list upon typing\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _search(e) {\n        let found = null,\n            term = e.target.value,\n            termLc = term.toLowerCase(),\n            list = this.options.items.filter(item => {\n                return item._lc.indexOf(termLc) !== -1;\n            }),\n            html = this._createListItems(list),\n            first = list[0],\n            len = list.length;\n\n        if (len === 1 && first) {\n            found = first;\n        }\n\n        if (!first || (len && termLc && termLc !== first._lc)) {\n            html += this._proposeItem(term);\n        }\n\n        this.__found = found;\n        this._renderListItems(html);\n    }\n\n    /**\n     * Create the item creation list item\n     * @param {String} term\n     * @return {String}\n     * @private\n     */\n    _proposeItem(term) {\n        let proposal = this.options.proposal.replace('{X}', `<span>${term}</span>`);\n        return `<li class=\"si-item si-proposal\" data-term=\"${term}\">${proposal}</li>`\n    }\n\n    /**\n     * Decide what to do when user clicks inside the component\n     * @param {MouseEvent} e\n     * @private\n     */\n    _handleClick(e) {\n        let el = e.target,\n            classList = el.classList;\n\n        if (classList.contains('si-proposal')) {\n            let obj = this._convertItem(el.dataset.term);\n            if (this._fireCallback('onCreate', obj)) {\n                this._setCurrent(this._insertItem(obj), el)\n                    .toggle()\n                    ._trigger('created');\n            }\n            return;\n        }\n\n        if (classList.contains('si-item')) {\n            this._setCurrent(this.findItem(el), el)\n                .toggle()\n                ._trigger('selected');\n            return;\n        }\n\n        if (classList.contains('si-removal')) {\n            el = el.parentNode;\n            if (this._fireCallback('onDelete', this.findItem(el))) {\n                this._trigger('removed', this._sliceItem(el));\n            }\n        }\n    }\n\n    /**\n     * The `onCreate` and `onDelete` callbacks allow to prevent their respective actions\n     * @param {String} name\n     * @param {Object} item\n     * @return {Boolean}\n     * @private\n     */\n    _fireCallback(name, item) {\n        if (typeof this.options[name] === 'function') {\n            return this.options[name](item);\n        }\n        return true;\n    }\n\n    /**\n     * Handle `Enter` when there is a value in the field\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _handleKey(e) {\n        let value = e.target.value,\n            item = this.__found,\n            event;\n        \n        if (!!value && (e.keyCode !== 13 && e.key !== 'Enter')) {\n            return;\n        }\n\n        if (!item && value) {\n            item = this._convertItem(value);\n            if (!this.findItem(value) && this._fireCallback('onCreate', item)) {\n                event = 'created';\n                this._setCurrent(this._insertItem(item));\n            }\n        } else if (item) {\n            event = 'selected';\n            this._setCurrent(item);\n        }\n\n        if (event) this.toggle()._trigger(event);\n    }\n\n    /**\n     * Insert a new item in the list\n     * @param {{value: String|Number, _lc: String}} item\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _insertItem(item) {\n        this.options.items.push(item);\n        if (this.options.sort) this._sortItems();\n        return item;\n    }\n\n    /**\n     * Rearrange the list\n     * @private\n     */\n    _sortItems() {\n        let order = this.options.order === 'desc' ? 1 : -1;\n        this.options.items.sort((a, b) => {\n            if (a._lc < b._lc) return -order;\n            if (a._lc > b._lc) return order;\n            return 0;\n        });\n    }\n\n    /**\n     * Remove an item from the list\n     * @param {HTMLElement|Node} el\n     * @return {{value: String|Number, _lc: String}}\n     * @private\n     */\n    _sliceItem(el) {\n        let items = this.options.items,\n            needle = el.dataset.value.toLowerCase(),\n            current = this.current,\n            item;\n        this.dom.list.removeChild(el);\n        item = items.splice(items.findIndex(item => item._lc === needle), 1).shift();\n        if (current && item._lc === current._lc) this.clearCurrent();\n        return item;\n    }\n}\n"],"names":["d","document","defaults","items","current","parent","maxHeight","proposal","sort","order","removalIcon","placeHolder","onDelete","onCreate","[object Object]","element","options","this","Object","assign","dom","el","_setElement","_convertItems","_convertItem","__found","_sortItems","_renderInit","_events","_bindEvents","closeOnEvent","e","key","keyCode","contains","target","toggle","on","_search","_handleClick","_handleKey","_renderListItems","input","event","fn","addEventListener","bind","push","name","show","firstElementChild","classList","blur","_lc","value","_clearSelected","nodeName","dataset","find","item","filter","removeEventListener","parentNode","removeChild","toString","_setSelected","CustomEvent","detail","createEvent","initEvent","dispatchEvent","nodeType","Error","querySelector","list","add","remove","map","toLowerCase","wrap","createElement","className","appendChild","_renderInput","firstChild","_renderList","type","autocomplete","spellcheck","placeholder","style","selected","button","_createRemovalButton","forEach","html","innerHTML","_createListItems","found","term","termLc","indexOf","first","len","length","_proposeItem","replace","obj","_fireCallback","_setCurrent","_insertItem","_trigger","findItem","_sliceItem","a","b","needle","splice","findIndex","shift","clearCurrent"],"mappings":"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"}